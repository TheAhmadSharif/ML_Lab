pbeta (0.6, 1.5, 1.5)
sa.dat <- c(rep(1.37), rep(0.13))
bb.sum(s.bat, 1, 1.5, 1.5)
bb.sum(s.dat, 1, 1.5, 1.5)
sa.dat <- c(rep(1.37), rep(0.13))
bb.sum(s.dat, 1, 1.5, 1.5)
1- pgamma(7, shape=400, rate=80)
text.dat <- c(7, 3, 8, 9, 10, 12)
pg.sum(text.dat, 400, 80)
pg.trip(text.dat, 400, 80)
cpu2.dat = c(26, 114, 325, 55, 242, 68, 422, 180, 10, 1146, 600)
eg.sum(cpu2.dat, 13, 760)
eg.trip(cpu2.dat, 13, 760)
th <- seq(0,0.1, length=50)
th.post <- dgamma(th, 25, 3963)
th.prior <- dgamma(th, 13, 760)
plot(th, th.post, type="1", col="1")
lines(th, th.prior, lty=2, col=2)
daat <- (1,2,3)
x <- c(1, 2, 3)
y <- c(2, 4, 6)
relation <- lm(y ~ x )
print(relation)
result <-  predict(relation, a)
a <- data.frame(x = 170)
result <-  predict(relation, a)
print(result)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
# Give the chart file a name.
png(file = "linearregression.png")
# Plot the chart.
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Save the file.
dev.off()
# Plot the chart.
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
1+2
2+4
x <- c(1, 2, 3)
y <- c(2, 4, 6)
relation <- lm(y ~ x )
print(relation)
########################################
a <- data.frame(x = 170)
result <-  predict(relation, a)
print(result)
########################################
a <- data.frame(x = 4)
x <- c(1, 2, 3, 4)
y <- c(2, 4, 6, 8)
relation <- lm(y ~ x )
print(relation)
########################################
a <- data.frame(x = 4)
result <-  predict(relation, a)
print(result)
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131, 160)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
x <- c(1, 2, 3, 4)
y <- c(2, 4, 6)
relation <- lm(y ~ x )
x <- c(1, 2, 3)
x <- c(1, 2, 3)
y <- c(2, 4, 6)
relation <- lm(y ~ x )
print(relation)
a <- data.frame(x = 4)
result <-  predict(relation, a)
print(result)
x <- c(1, 2, 3)
y <- c(2, 4, 6)
relation <- lm(y ~ x )
print(relation)
########################################
a <- data.frame(x = 20)
result <-  predict(relation, a)
print(result)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
# Give the chart file a name.
png(file = "linearregression.png")
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Save the file.
dev.off()
# Create the predictor and response variable.
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
# Give the chart file a name.
png(file = "linearregression.png")
# Plot the chart.
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Create the predictor and response variable.
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
# Give the chart file a name.
png(file = "linearregression.png")
# Plot the chart.
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Create the predictor and response variable.
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Save the file.
dev.off()
# Create the predictor and response variable.
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
relation <- lm(y~x)
print(relation)
library(lmtest)
pwd
pwd
dir
getdir()
getwd()
setwd("/home/ahmad/Desktop/Madlen")
data <- read.csv("data.csv")
data
data.Date
data->date()
data$Date
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
data$Season <- ifelse(month(data$Date) %in% c(11, 12, 1, 2, 3, 4), "Winter", "Summer")
setwd("/home/ahmad/Desktop/Madlen")
library(dplyr)
library(lmtest)
data <- read.csv("data.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
data$Season <- ifelse(month(data$Date) %in% c(11, 12, 1, 2, 3, 4), "Winter", "Summer")
library(lubridate)
coeftest(model)[2,]
data <- read.csv("data.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
data$Month <- month(data$Date)
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
# Extract month information using lubridate
data$Month <- month(data$Date)
# Extract month information using lubridate
data$Month <- as.integer(format(data$Date, "%m"))
data$Season <- ifelse(data$Month %in% c(11, 12, 1, 2, 3, 4), "Winter", "Summer")
data$Season <- ifelse(data$Month %in% c(11, 12, 1, 2, 3, 4), "Winter", "Summer")
data$Winter <- ifelse(data$Season == "Winter", 1, 0)
model <- lm(Compounded.return ~ Winter, data = data)
model
summary(model)
data <- read.csv("data.csv")
library(dplyr)
library(lmtest)
library(lubridate)
setwd("/home/ahmad/Desktop/Madlen")
data <- read.csv("data.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
# Extract month information using lubridate
data$Month <- as.integer(format(data$Date, "%m"))
data$Season <- ifelse(data$Month %in% c(11, 12, 1, 2, 3, 4), "Winter", "Summer")
data$Winter <- ifelse(data$Season == "Winter", 1, 0)
model <- lm(Compounded.return ~ Winter, data = data)
model
library(dplyr)
library(lmtest)
library(lubridate)
setwd("/home/ahmad/Desktop/Madlen")
data <- read.csv("data.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
data$Month <- as.integer(format(data$Date, "%m"))
data$Season <- ifelse(data$Month %in% c(11, 12, 1, 2, 3, 4), "Winter", "Summer")
data$Winter <- ifelse(data$Season == "Winter", 1, 0)
model <- lm(Compounded.return ~ Winter, data = data)
model
summary(model)
