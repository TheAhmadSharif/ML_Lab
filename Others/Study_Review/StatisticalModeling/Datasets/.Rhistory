packages <- c("fpp", "forecast", "tseries", "ggplot2", "dplyr", "plyr", "Hmisc", "lme4", "arm", "lattice", "lavaan")
for(p in packages){
if(!require(p,character.only = TRUE)) install.packages(p, repos="http://cran.us.r-project.org", dependencies = TRUE)
library(p,character.only = TRUE)
}
setwd("/home/ahmad/Desktop/2023_2024/2024/StatisticalModeling/Datasets")
Alba<-read.table("Alba.txt", sep="\t", dec=".", header=TRUE)
attach(Alba)
head(Alba)
model_inverse <- glm(DryMatter ~ Dose * factor(Herbicide), family = gaussian(link="inverse"), data = Alba)
# Prediction Interval
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
pred <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
model.matrix(model_inverse)
############################ Exercise 3 > 1 > D ############################
Alba <- read.csv("Alba.txt", header = TRUE, sep = "\t")
Alba
############################ Exercise 3 > 1 > D ############################
Alba <- read.csv("Alba.txt", header = TRUE, sep = "\t")
Alba
head(Alba)
attach(Alba)
head(Alba)
model_inverse <- glm( DryMatter ~ Does + factor(Herbicide), data = Alba)
model_inverse <- glm( DryMatter ~ Dose + factor(Herbicide), data = Alba)
model_inverse
MSE_1 <- mean(resid(model_inverse)^2)
MSE_1
MSE_1 <- mean(residuals(model_inverse)^2)
MSE_1
model_inverse <- glm( DryMatter ~ Dose + factor(Herbicide), data = Alba, family = gaussian(link="inverse"), type = "link")
model_inverse <- glm( DryMatter ~ Dose + factor(Herbicide), data = Alba, family = gaussian(link="inverse"))
model_inverse
MSE_1 <- mean(residuals(model_inverse)^2)
MSE_1
############################ Exercise 3 > 1 > D ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("Alba.txt", header = TRUE, sep = "\t")
attach(Alba)
head(Alba)
model_inverse <- glm( DryMatter ~ Dose + factor(Herbicide), data = Alba, family = gaussian(link="inverse"))
model_inverse
MSE_1 <- mean(residuals(model_identity, type="response")^2)
############################ Exercise 3 > 1 > D ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("Alba.txt", header = TRUE, sep = "\t")
head(Alba)
model_inverse <- glm( DryMatter ~ Dose * factor(Herbicide), data = Alba, family = gaussian(link="inverse"))
model_inverse
MSE_1 <- mean(residuals(model_identity, type="response")^2)
MSE_1 # 0.3527807
model_inverse <- glm( DryMatter ~ Dose * factor(Herbicide), data = Alba, family = gaussian(link="inverse"))
model_inverse
MSE_1 <- mean(residuals(model_inverse, type="response")^2)
MSE_1 # 0.3527807
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
pred <- pred(model_inverse, newdata = newdata, type = "link")
pred <- predict(model_inverse, newdata = newdata, type = "link")
pred
pred <- predict(model_inverse, newdata = newdata, type="response")
pred # 0.3820587
# c)
confidence_interval <- predict(model_inverse, newdata = newdata, inverval = "confidence", level = 0.95)
confidence_interval
# c)
confidence_interval <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
confidence_interval # 0.3820587
qnorm(.95)
qnorm(.97)
qnorm(.025)
qnorm(.25)
qnorm(.95)
qnorm(.025,lower.tail=FALSE)
qnorm(0.025)
qnorm(0.025, lower.tail =  FALSE)
qnorm(0.05, lower.tail =  FALSE)
qnorm(0.1, lower.tail =  FALSE)
# c)
predict_c <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
predict_c # 0.3820587
p <- confidence_interval - qnorm(.025) * confidence_interval.se$fit
p <- predict_c - qnorm(.025) * predict_c$fit
p <- predict_c - qnorm(.9) * predict_c$fit
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
pred <- predict(model_inverse, newdata = newdata, type="response")
pred # 2.617399
# c)
predict_c <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
predict_c # 0.3820587
p <- predict_c - qnorm(.9) * predict_c$se.fit
p <- pred$fit - 1.96 * predict_c$se.fit
p <- predict_c$fit - 1.96 * predict_c$se.fit
p
print(lower_bound[0])
print(lower_bound[0])
print(lower_bound)
lower_bound <- predict_c$fit - 1.96 * predict_c$se.fit
print(lower_bound)
print(lower_bound[0])
print(lower_bound[1])
qnorm(.95)
qnorm(95)
qnorm(0.95)
qnorm(0.97)
qnorm(0.99)
qnorm(0.98)
qnorm(0.9)
qnorm(0.025)
qnorm(0.025, tail = FALSE)
qnorm(0.025, lower.tail = FALSE)
# qnorm(0.025, lower.tail = FALSE) # 1.96
qnorm(0.05, lower.tail = FALSE) # 1.96
# qnorm(0.025, lower.tail = FALSE) # 1.96
qnorm(0.01, lower.tail = FALSE) # 1.96
# qnorm(0.025, lower.tail = FALSE) # 1.96
qnorm(0.1, lower.tail = FALSE) # 1.96
model_inverse <- summary(model_inverse)$dispersion
phai <- summary(model_inverse)$dispersion
phai
phai <- summary(model_inverse)$dispersion
############################ Exercise 3 > 1 > D ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("Alba.txt", header = TRUE, sep = "\t")
attach(Alba)
head(Alba)
model_inverse <- glm( DryMatter ~ Dose * factor(Herbicide), data = Alba, family = gaussian(link="inverse"))
model_inverse
MSE_1 <- mean(residuals(model_inverse, type="response")^2)
MSE_1 # 0.2693486
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
pred <- predict(model_inverse, newdata = newdata, type="response")
pred # 2.617399
# c)
predict_c <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
predict_c # 0.3820587
lower_bound <- predict_c$fit - 1.96 * predict_c$se.fit
print(lower_bound[1])
# d )
fhai <- summary(model_inverse)$dispersion
fhai
DF <-  - (predict_c)^2
# d )
model.matrix(model_inverse)
x
x <- t(c(t(1, 50, 1, 50)))
x
x <- t(c(t(1, 50, 1, 50)))
x
x <- t(t(c(1, 50, 1, 50)))
x
variance_effect <- fhai + (DF)^2 %*% t(x)  %*% vcov(model_inverse)  %*% x
DF <-  - (predict_c)^2
# c)
predict_c <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
predict_c # 0.3820587
fhai <- summary(model_inverse)$dispersion
fhai # 0.2861666
DF <-  - (predict_c)^2
DF <-  - (predict_c^2)
DF <-  -(predict_c^2)
DF <--(predict_c^2)
# c)
predict_c <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
predict_c # 0.3820587
DF <--(pred^2)
variance_effect <- fhai + (DF)^2 %*% t(x)  %*% vcov(model_inverse)  %*% x
DF
DF <--(pred^2)
DF # -6.850775
variance_effect <- fhai + (DF)^2 * t(x)  %*% vcov(model_inverse)  %*% x
lower_bound <- pred - qnorm(.9) * sqrt(variance_effect)
lower_bound
Alba<-read.table("Alba.txt", sep="\t", dec=".", header=TRUE)
attach(Alba)
head(Alba)
plot(Dose, DryMatter)
model_identity<-glm(DryMatter~Dose*factor(Herbicide), family=gaussian(link="identity"), data = Alba)
model_log <- glm(DryMatter ~ Dose * factor(Herbicide), family = gaussian(link="log"), data = Alba)
model_inverse <- glm(DryMatter ~ Dose * factor(Herbicide), family = gaussian(link="inverse"), data = Alba)
model_mu2 <- glm(DryMatter ~ Dose * factor(Herbicide), family = gaussian(link="1/mu^2"), data = Alba)
model.matrix(model_inverse)
summary(model_identity)
summary(model_log)
summary(model_inverse)
summary(model_mu2)
MSE_1 <- mean(residuals(model_identity, type="response")^2)
MSE_2 <- mean(residuals(model_log, type="response")^2)
MSE_3 <- mean(residuals(model_inverse, type="response")^2)
MSE_4 <- mean(residuals(model_mu2, type="response")^2)
print(MSE_1)
print(MSE_2)
print(MSE_3)
print(MSE_4)
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
newdata
pred <- predict(model_inverse, newdata = newdata, type="response")
pred # 2.617399
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
pred <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
lower <- pred$fit - 1.96 * pred$se.fit
lower
lower_ <- 1/lower
lower_ # 2.905725
############################ Exercise 3 > 1 > D ############################
Alba<-read.table("Alba.txt", sep="\t", dec=".", header=TRUE)
attach(Alba)
head(Alba)
model_inverse <- glm(DryMatter ~ Dose * factor(Herbicide), family = gaussian(link="inverse"), data = Alba)
# Prediction Interval
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
pred <- predict(model_inverse, newdata = newdata, type = "link", se.fit = TRUE)
model.matrix(model_inverse)
xf <- t(t(c(1, 50, 1, 50)))
fhai <- summary(model_inverse)$dispersion
fhai # 0.2861666 // fai
variance_effect <- fhai +(DF^2)*t(xf) %*% vcov(model_inverse) %*% xf
variance_effect
DF <--(pred^2)
DF
newdata <- data.frame(Dose = 50, Herbicide = "Glyphosate")
newdata
pred <- predict(model_inverse, newdata = newdata, type="response")
pred # 2.617399
DF <--(pred^2)
DF
############################ Exercise 3 > 2 > A ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("ratstime", header = TRUE, sep = "\t")
############################ Exercise 3 > 2 > A ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("ratstime", header = TRUE, sep = "\t")
############################ Exercise 3 > 2 > A ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("ratstime.txt", header = TRUE, sep = "\t")
attach(Alba)
head(Alba)
model_inverse <- glm( DryMatter ~ Dose * factor(Herbicide), data = Alba, family = gaussian(link="inverse"))
model_inverse
MSE_1 <- mean(residuals(model_inverse, type="response")^2)
MSE_1 # 0.2693486
############################ Exercise 3 > 2 > A ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
Alba <- read.csv("ratstime.txt", header = TRUE, sep = "\t")
attach(Alba)
head(Alba)
model_inverse <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "inverse"))
############################ Exercise 3 > 2 > A ############################
# a) Midentity : µi = β0 + β1 xi1 + αj + γj xi1 ,
ratstime <- read.csv("ratstime.txt", header = TRUE, sep = "\t")
attach(ratstime)
head(ratstime)
model_inverse <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "inverse"))
model_inverse
MSE_3_2 = mean(residuals(model_inverse)^2)
print(MSE_3_2)
print(MSE_3_2) # 0.01866069
model_identity <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "identity"))
model_log <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "log"))
model_inverse <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "inverse"))
model_identity <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "identity"))
model_log <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "log"))
model_inverse <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "inverse"))
MSE_3_2_identity = mean(residuals(model_identity)^2)
MSE_3_2_log = mean(residuals(model_log)^2)
MSE_3_2_inverse = mean(residuals(model_inverse)^2)
print(MSE_3_2_identity) # 0.01866069
print(MSE_3_2_log) # 0.01866069
print(MSE_3_2_log) # 0.0187694
model_identity <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "identity"))
model_log <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "log"))
model_inverse <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "inverse"))
MSE_3_2_identity = mean(residuals(model_identity)^2)
MSE_3_2_log = mean(residuals(model_log)^2)
MSE_3_2_inverse = mean(residuals(model_inverse)^2)
print(MSE_3_2_identity) # 0.02189297
print(MSE_3_2_log) # 0.0187694
print(MSE_3_2_inverse) # 0.01866069
head(ratstime)
newdata = data.frame(poison = "II", treat = "B")
pred_3_2_c <- predict(MSE_3_2_log, newdata = newdata, type = "link")
newdata <- data.frame(poison = "II", treat = "B")
pred_3_2_c <- predict(MSE_3_2_log, newdata = newdata, type = "link")
pred_3_2_c <- predict(MSE_3_2_log, newdata = newdata, type = "link", se.fit = TRUE)
model_log <- glm(time ~ poison + treat, data = ratstime, family = gaussian(link = "log"))
newdata <- data.frame(poison = "II", treat = "B")
pred_3_2_c <- predict(MSE_3_2_log, newdata = newdata, type = "link", se.fit = TRUE)
pred_3_2_c <- predict(model_log, newdata = newdata, type = "link", se.fit = TRUE)
newdata <- data.frame(poison = "II", treat = "B")
pred_3_2_c <- predict(model_log, newdata = newdata, type = "link", se.fit = TRUE)
pred_3_2_c
lower_bound <- pred_3_2_c$fit - 1.96 * pred_3_2_c$se.fit
lower_bound
l <- exp(lower_bound) # Becuase of log
l
qnorm(0.975
)
lower_bound <- pred_3_2_c$fit - qnorm(0.975) * pred_3_2_c$se.fit
lower_bound
l <- exp(lower_bound) # Becuase of log
l # 0.6847237
fhai <- summary(model_log)$dispersion
fhai
DF <- -(fhai)^2
DF
print(DF) # -0.0004601368
############################ Exercise 3 > 2 > d ############################
model.matreix(model_log)
model.matrix(model_log)
############################ Exercise 3 > 2 > d ############################
model.matrix(model_log)
newdata <- data.frame(poison = "II", treat = "B")
DF <- -(fhai)^2
print(DF) # -0.0004601368
x <- t(t(c(1, 1, 0, 1, 0, 0)))
variance_effect <- fhai + (DF) ^2  * t(x) %*% vcov(model_log) %*% x
print(variance_effect)
lower_bound <- pred_3_2_c - (0.9) * sqrt(variance_effect)
variance_effect <- fhai + (DF) ^2  * t(x) %*% vcov(model_log) %*% x
print(variance_effect) # 0.0214508
lower_bound <- pred_3_2_c - (0.9) * sqrt(variance_effect)
print(lower_bound) # 0.0214508
lower_bound <- pred_3_2_c - qnorm(0.9) * sqrt(variance_effect)
print(lower_bound) # 0.0214508
DF <- -(fhai) * (pred_3_2_c)^2
print(DF) # -0.0004601368
DF <- -(fhai) * (pred_3_2_c^2)
fhai <- summary(model_log)$dispersion
DF <- -(fhai) * (pred_3_2_c^2)
DF <- pred_3_2_c
print(DF) # -0.0004601368
var_Yf <- (fhai) * (pred_3_2_c^2)
pred_3_2_c
pred<-predict(model_log, newdata=newdata, type="response")
fhai <- summary(model_log)$dispersion
DF <- pred_3_2_c
print(DF) # -0.0004601368
pred_3_2_c
var_Yf <- (fhai) * (pred_3_2_c^2)
pred_3_2_d<-predict(model_log, newdata=newdata, type="response")
var_Yf <- (fhai) * (pred_3_2_d^2)
x <- t(t(c(1, 1, 0, 1, 0, 0)))
variance_effect <- var_Yf + (DF) ^2  * t(x) %*% vcov(model_log) %*% x
print(variance_effect) # 0.0214508
pred_3_2_d
lower_bound <- pred_3_2_d - qnorm(0.9) * sqrt(variance_effect)
print(lower_bound) # 0.0214508
data <- read.csv("ratstime.txt", header = TRUE, sep="/t")
setwd("/home/ahmad/Desktop/2023_2024/2024/StatisticalModeling/Datasets")
data <- read.csv("ratstime.txt", header = TRUE, sep="\t")
ratstime <- read.csv("ratstime.txt", header = TRUE, sep="\t")
attach(ratstime)
head(ratstime)
head(ratstime)
model <- glm(time ~ poison + treat, family = gaussian(link="log"), data = ratstime)
model <- glm(time ~ poison + treat, family = gaussian(link="log"), data = ratstime)
ratstime <- read.csv("ratstime.txt", header = TRUE, sep="\t")
attach(ratstime)
head(ratstime)
model <- glm(time ~ poison + treat, family = gaussian(link="log"), data = ratstime)
model <- glm(time ~ poison + treat, family = gaussian(link="log"), data = ratstime)
model
MSE_3_2_a <- mean(residuals(model)^2)
print(MSE_3_2_a)
model <- glm(time ~ poison + treat, family = gaussian(link="inverse"), data = ratstime)
model
MSE_3_2_a <- mean(residuals(model)^2)
print(MSE_3_2_a) # 0.0187694
